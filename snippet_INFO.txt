1. acd - Достъп до стойност в речник
int namesAge = ages["Name"];

2. adi - Добавяне на елемент към списък
numbers.Add(0);

3. ank - Добавяне на нова двойка ключ-стойност в речник
ages.Add("Name", 01);

4. anm - Използване на анонимни методи
Action<string> printString = delegate (string s) { Console.WriteLine(s); };
printString("Hello, world!");

5. bc - Проверка дали списък съдържа определен елемент
bool containsNumber = numbers.Contains(4);

6. ca - T [] myArray = new T []; // създава празен масив с фиксиран тип

7. cnk - Проверка дали речник съдържа определен ключ
bool hasKey = ages.ContainsKey("Bob");

8. cr - Console.ReadLine();// четене на вход от конзолата като низ (string).

9. crs - string[] name = Console.ReadLine() .Split(", "); Console.ReadLine() // Чете вход от конзолата като низ (string).
.Split(", ") – Разделя прочетения низ на поднизове, използвайки ", " (запетая и интервал) като разделител.
string[] name – Декларира масив от низове (string[]), който ще съдържа резултатите от разделянето.

10. dc - Създава нов речник с TKey, TValue тип.
Dictionary<TKey, TValue> myDictionary = new Dictionary<TKey, TValue>();

11. dcx - Работа с речници (Dictionary) 
Dictionary<TKey, TValue> name = new Dictionary<TKey, TValue>()
{
    {key1, "value1"},
    {key2, "value2"}
};

12. dn - Декларация и инициализация на речник
var name = new Dictionary<TKey, TValue>();

13. dnx - Създава нов речник 
var name = new Dictionary<TKey, TValue>() { [0] = null };

14. dx - Нов речник от типа ключ и стойност. - generic
Dictionary<TKey, TValue>
 
15. fcw - Преминаване през списък с foreach цикъл
foreach (var item in items)
{
    Console.WriteLine(item);
}

16. fl - Филтриране на списък с LINQ
var evenNumbers = numbers.Where(n => n % 2 == 0).ToList();

17. forcw - For цикъл за обхождане и отпечатване на двумерен масив
for (int row = 0; row < numbers.GetLength(0); row++)        // редове
{
    for (int col = 0; col < numbers.GetLength(1); col++)    // колони
    {
        Console.Write(numbers[row, col] + " ");
    }
    Console.WriteLine(); // нов ред след всяка редица   
}

18. ig - Групиране на елементи по критерий
var groupedByRemainder = numbers.GroupBy(n => n % 3);

19. ipr - int name = int.Parse(Console.ReadLine());  // нов int чакащ вход от потребителя

20. lax - Използване на ламбда изрази
Func<int, int> square = x => x * x;
int result = square(5)

21. lc - Списък с колекция от елементи.
List<Т> myList = new List<T>();

22. lcx - Инициализация на списъка.
List<T> myList = new List<T>() { 1, 2, 3, 4, 5 };

23. ll - Обединяване на два списъка
List<int> moreNumbers = new List<int>() { 7, 8, 9 };
var combinedList = numbers.Concat(moreNumbers).ToList();

24.ln -Декларация на списък и променлива.
var myList = new List<T>();

25.lnx-Декларация на списък и променлива (с инициализатор).
List<T> myList = new List<T>();
             myList.Add(item);
             myList.Remove(item);
             myList.RemoveAt(index);
             myList.Insert(index, item);
             myList.Clear();
             myList.Contains(item);
             var item = myList[0];

   foreach (var list in myList)
   {
     Console.WriteLine(list);
   }

26. lx - Нов лист - generic
List <T>

27. nc - Нов празен клас
class ClassName
{

}

28. no - Създаване на нов обект
MyClass myObject = new MyClass();

29. rl - Обръщане на реда на елементите в списък
numbers.Reverse();

30. rmi - Премахване на елемент от списък
numbers.Remove(0);

31. sl - Сортиране на списък
numbers.Sort();

32. ssa - int[] numbers = Console.ReadLine().Split(", ").Select(int.Parse).ToArray();//Чете входа като низ (string).
.Split(", ") – Разделя низа на части, използвайки ", " (запетая и интервал) като разделител.
.Select(int.Parse) – Преобразува всеки елемент от масива (който е string) в цяло число (int).
.ToArray() – Преобразува резултата обратно в масив от цели числа (int[]).

33. ssl - List<int> numbers = Console.ReadLine() .Split(", ") .Select(int.Parse) .ToList();//Чете входа като низ (string).
.Split(", ") – Разделя прочетения низ на поднизове, използвайки ", " (запетая и интервал) като разделител.
.Select(int.Parse) – Преобразува всеки подниз в цяло число (int).
.ToList() – Преобразува резултата в списък от цели числа (List<int>)

34. str - string name = Console.ReadLine();  //  нов стринг чакащ вход от usera

35. sysp - namespace ConsoleApp1 {internal class Program {}} Program класът е празен и няма Main мето.

36. syspm - namespace ConsoleApp1 { internal class Program { static void Main(string[] args) { }}//namespace ConsoleApp1
Дефинира пространство от имена (namespace), което групира класове и други типове. ConsoleApp1 е името на пространството, което обикновено съвпада с името на проекта.internal class Program Дефинира клас с име Program.Модификаторът internal означава, че този клас е достъпен само в рамките на същия проект. static void Main(string[] args) Това е главният метод (Main), който се изпълнява първи при стартиране на програмата.
string[] args – Това е масив от аргументи, които могат да се подават от командния ред.void – Методът няма връщана стойност. Тяло на метода { }

37. ua - Използване на using за автоматично освобождаване на ресурси
using (StreamWriter writer = new StreamWriter("example.txt"))
{
    writer.WriteLine("This is an example.");
}

38. uty - Използване на try-catch блокове за обработка на изключения
try
{
    // Код, който може да хвърли изключение
}
catch (Exception ex)
{
    Console.WriteLine($"Възникна грешка: {ex.Message}");
}
finally
{
    // Код, който винаги се изпълнява независимо от изключението
}

39. va - Празен масив от var променлива 
var items = new T [0];

40. vax - Декларация и инициализация на масив с T променлива 
var myArray = new T [] { null };


41. vn - Празен масив с var променлива
var myArray = new Command<T>( );

42. vnx - Декларация и инициализация на празен масив с var променлива
var items = new Command<T>() { null };

43. vnz- Нова инициализация на колекция - .NET8.
Command<T> items = [];




